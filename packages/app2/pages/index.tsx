import Head from "next/head"
import Link from "next/link"
import React, { CSSProperties } from "react"
import cn from "classnames"

type MegaMenuItem = {
  href: string
  icon?: string
  body: string
  title: string
}

type MegaMenu = {
  title: string
  items: MegaMenuItem[]
}[]

type NavItem = {
  href: string
  title: string
  megaMenu?: MegaMenu
}
const navItems: NavItem[] = [
  {
    href: "/",
    title: "Portfolio",
    megaMenu: [
      {
        title: "Foo",
        items: [
          {
            href: "/",
            icon: "https://www.twilio.com/docs/static/albaridian/core/img/new-navigation/video.278b034fd.svg",
            title: " jfsdklfjlksdjf",
            body: "sfskfsifhs sfd s",
          },
        ],
      },
    ],
  },
  {
    href: "/services",
    title: "Services",
  },
]

interface MegaMenuItemProps {
  data: MegaMenuItem
}
const MegaMenuItem = ({ data }: MegaMenuItemProps) => {
  return (
    <li className="my-6 flex flex-col items-start">
      <a href={"/"} className="leading-6 flex items-start">
        {data.icon !== undefined ? (
          // eslint-disable-next-line @next/next/no-img-element
          <img alt="" src={data.icon} className="mt-1 mr-4" />
        ) : null}
        <div>
          <div className="font-medium text-sm hover:underline hover:text-brand-600 pb-1">
            {data.title}
          </div>
          <p className="text-xs leading-5 text-primary">{data.body}</p>
        </div>
      </a>
    </li>
  )
}

interface MegaMenuProps {
  isFixed: boolean
  isOpen: boolean
  megaMenu: MegaMenu
}
const MegaMenu = ({ isFixed, isOpen, megaMenu }: MegaMenuProps) => {
  return (
    <div
      className={cn(
        "flex justify-center fixed left-0 w-full transition-all duration-250 xs-slow-acceleration leading-normal",
        isFixed ? "top-[2.5rem]" : "top-[calc(4.8125rem + 1px)]",
        isOpen ? "opacity-100 visible" : "opacity-0 invisible",
      )}
    >
      {/* TODO: max-w media query */}
      <div className="max-w-full inline-flex bg-white shadow-xl rounded-t-none rounded-b-2 absolute overflow-auto border-t-1 border-t-gray-200">
        {megaMenu.map((x) => (
          <div
            className="w-[21.5rem] pt-[2.5rem] pr-[2rem] pb-[3rem] pl-[3rem]"
            key={x.title}
          >
            <h1 className="text-sm font-bold text-primary border-b border-b-gray-200 pb-4 mb-8 leading-6">
              {x.title}
            </h1>
            <ul>
              {x.items.map((item) => (
                <MegaMenuItem data={item} key={item.title} />
              ))}
            </ul>
          </div>
        ))}
      </div>
    </div>
  )
}

export default function Home() {
  const [activeIndex, setActiveIndex] = React.useState<number | null>(null)
  const [navUnderlineStyles, setNavUnderlineStyles] =
    React.useState<CSSProperties>({})
  const navRef = React.useRef<HTMLUListElement>(null)

  // TODO: useLayoutEffect
  React.useEffect(() => {
    function getAndSetNavUnderlineStyles() {
      if (navRef.current) {
        if (activeIndex === null) {
          setNavUnderlineStyles({})
        } else {
          const activeNavItem = Array.from(navRef.current.children).filter(
            (x) => x.tagName === "LI",
          )[activeIndex] as HTMLLIElement
          const activeNavLink = Array.from(activeNavItem.children).find(
            (x) => x.tagName === "A",
          ) as HTMLAnchorElement

          let left = activeNavItem.offsetLeft + activeNavLink.offsetLeft
          let width = activeNavLink.clientWidth

          setNavUnderlineStyles({
            left,
            width,
          })
        }
      }
    }

    getAndSetNavUnderlineStyles()

    window.addEventListener("resize", getAndSetNavUnderlineStyles)
    window.addEventListener("load", getAndSetNavUnderlineStyles)

    return () => {
      window.removeEventListener("resize", getAndSetNavUnderlineStyles)
      window.removeEventListener("load", getAndSetNavUnderlineStyles)
    }
  }, [activeIndex])

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <header className="max-w-1600 margin-x-auto z-[2000] shadow-gray-200-hr-1 fixed left-0 right-0 top-0 p-0 transition-[top] duration-350 xs-slow-acceleration-md-slower-deceleration">
        <nav
          className="bg-white w-full z-[99] px-6 flex items-center justify-between"
          style={
            {
              "scroll-behavior": "smooth",
            } as any
          }
        >
          <ul className="nav inline-flex flex-wrap" ref={navRef}>
            {navItems.map((item, index) => (
              <li
                key={item.href}
                className="nav__item"
                onMouseEnter={() => {
                  setActiveIndex(index)
                }}
                onMouseLeave={() => {
                  setActiveIndex(null)
                }}
              >
                <Link href={item.href}>
                  <a className="nav__link xs-slow-acceleration">{item.title}</a>
                </Link>
                {item.megaMenu ? (
                  <MegaMenu
                    isFixed={false}
                    isOpen={index === activeIndex}
                    megaMenu={item.megaMenu}
                  />
                ) : null}
              </li>
            ))}
            {/* styles: opacity, left, width */}
            <span
              className="z-10 transition-all ease duration-200 delay-200 absolute bottom-[-1px] height-[2px]"
              style={{
                opacity: activeIndex ? 1 : 0,
                ...navUnderlineStyles,
              }}
            />
          </ul>
          <ul className="text-right z-5 space-x-2">
            <li className="inline-block">
              {/* TODO: refactor */}
              {/* eslint-disable-next-line @next/next/no-html-link-for-pages */}
              <a
                href="/"
                className="font-normal inline-block rounded-[0.25rem] py-2 px-4 duration-200 leading-4 transition-[color,border,background] ease-in text-sm bg-transparent border-2 border-brand-600 text-brand-600 hover:text-white hover:bg-brand-600"
              >
                Talk to an expert
              </a>
            </li>
          </ul>
        </nav>
      </header>
    </div>
  )
}
